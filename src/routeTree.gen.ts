/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UnprotectedRouteImport } from './routes/_unprotected/route'
import { Route as UnprotectedIndexImport } from './routes/_unprotected/index'
import { Route as UnprotectedSignupImport } from './routes/_unprotected/signup'
import { Route as UnprotectedSigninImport } from './routes/_unprotected/signin'
import { Route as ProtectedDashboardRouteImport } from './routes/_protected/dashboard/route'
import { Route as UnprotectedStudentsIndexImport } from './routes/_unprotected/students/index'
import { Route as UnprotectedServicesIndexImport } from './routes/_unprotected/services/index'
import { Route as ProtectedDashboardIndexImport } from './routes/_protected/dashboard/index'
import { Route as UnprotectedStudentsStudentIdImport } from './routes/_unprotected/students/$studentId'
import { Route as UnprotectedServicesServiceIdImport } from './routes/_unprotected/services/$serviceId'
import { Route as ProtectedDashboardProfileImport } from './routes/_protected/dashboard/profile'
import { Route as ProtectedDashboardServicesIndexImport } from './routes/_protected/dashboard/services/index'
import { Route as ProtectedDashboardServicesServiceIdImport } from './routes/_protected/dashboard/services/$serviceId'

// Create/Update Routes

const UnprotectedRouteRoute = UnprotectedRouteImport.update({
  id: '/_unprotected',
  getParentRoute: () => rootRoute,
} as any)

const UnprotectedIndexRoute = UnprotectedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UnprotectedRouteRoute,
} as any)

const UnprotectedSignupRoute = UnprotectedSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => UnprotectedRouteRoute,
} as any)

const UnprotectedSigninRoute = UnprotectedSigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => UnprotectedRouteRoute,
} as any)

const ProtectedDashboardRouteRoute = ProtectedDashboardRouteImport.update({
  id: '/_protected/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const UnprotectedStudentsIndexRoute = UnprotectedStudentsIndexImport.update({
  id: '/students/',
  path: '/students/',
  getParentRoute: () => UnprotectedRouteRoute,
} as any)

const UnprotectedServicesIndexRoute = UnprotectedServicesIndexImport.update({
  id: '/services/',
  path: '/services/',
  getParentRoute: () => UnprotectedRouteRoute,
} as any)

const ProtectedDashboardIndexRoute = ProtectedDashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedDashboardRouteRoute,
} as any)

const UnprotectedStudentsStudentIdRoute =
  UnprotectedStudentsStudentIdImport.update({
    id: '/students/$studentId',
    path: '/students/$studentId',
    getParentRoute: () => UnprotectedRouteRoute,
  } as any)

const UnprotectedServicesServiceIdRoute =
  UnprotectedServicesServiceIdImport.update({
    id: '/services/$serviceId',
    path: '/services/$serviceId',
    getParentRoute: () => UnprotectedRouteRoute,
  } as any)

const ProtectedDashboardProfileRoute = ProtectedDashboardProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => ProtectedDashboardRouteRoute,
} as any)

const ProtectedDashboardServicesIndexRoute =
  ProtectedDashboardServicesIndexImport.update({
    id: '/services/',
    path: '/services/',
    getParentRoute: () => ProtectedDashboardRouteRoute,
  } as any)

const ProtectedDashboardServicesServiceIdRoute =
  ProtectedDashboardServicesServiceIdImport.update({
    id: '/services/$serviceId',
    path: '/services/$serviceId',
    getParentRoute: () => ProtectedDashboardRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_unprotected': {
      id: '/_unprotected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnprotectedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_protected/dashboard': {
      id: '/_protected/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof ProtectedDashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/_unprotected/signin': {
      id: '/_unprotected/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof UnprotectedSigninImport
      parentRoute: typeof UnprotectedRouteImport
    }
    '/_unprotected/signup': {
      id: '/_unprotected/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof UnprotectedSignupImport
      parentRoute: typeof UnprotectedRouteImport
    }
    '/_unprotected/': {
      id: '/_unprotected/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof UnprotectedIndexImport
      parentRoute: typeof UnprotectedRouteImport
    }
    '/_protected/dashboard/profile': {
      id: '/_protected/dashboard/profile'
      path: '/profile'
      fullPath: '/dashboard/profile'
      preLoaderRoute: typeof ProtectedDashboardProfileImport
      parentRoute: typeof ProtectedDashboardRouteImport
    }
    '/_unprotected/services/$serviceId': {
      id: '/_unprotected/services/$serviceId'
      path: '/services/$serviceId'
      fullPath: '/services/$serviceId'
      preLoaderRoute: typeof UnprotectedServicesServiceIdImport
      parentRoute: typeof UnprotectedRouteImport
    }
    '/_unprotected/students/$studentId': {
      id: '/_unprotected/students/$studentId'
      path: '/students/$studentId'
      fullPath: '/students/$studentId'
      preLoaderRoute: typeof UnprotectedStudentsStudentIdImport
      parentRoute: typeof UnprotectedRouteImport
    }
    '/_protected/dashboard/': {
      id: '/_protected/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof ProtectedDashboardIndexImport
      parentRoute: typeof ProtectedDashboardRouteImport
    }
    '/_unprotected/services/': {
      id: '/_unprotected/services/'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof UnprotectedServicesIndexImport
      parentRoute: typeof UnprotectedRouteImport
    }
    '/_unprotected/students/': {
      id: '/_unprotected/students/'
      path: '/students'
      fullPath: '/students'
      preLoaderRoute: typeof UnprotectedStudentsIndexImport
      parentRoute: typeof UnprotectedRouteImport
    }
    '/_protected/dashboard/services/$serviceId': {
      id: '/_protected/dashboard/services/$serviceId'
      path: '/services/$serviceId'
      fullPath: '/dashboard/services/$serviceId'
      preLoaderRoute: typeof ProtectedDashboardServicesServiceIdImport
      parentRoute: typeof ProtectedDashboardRouteImport
    }
    '/_protected/dashboard/services/': {
      id: '/_protected/dashboard/services/'
      path: '/services'
      fullPath: '/dashboard/services'
      preLoaderRoute: typeof ProtectedDashboardServicesIndexImport
      parentRoute: typeof ProtectedDashboardRouteImport
    }
  }
}

// Create and export the route tree

interface UnprotectedRouteRouteChildren {
  UnprotectedSigninRoute: typeof UnprotectedSigninRoute
  UnprotectedSignupRoute: typeof UnprotectedSignupRoute
  UnprotectedIndexRoute: typeof UnprotectedIndexRoute
  UnprotectedServicesServiceIdRoute: typeof UnprotectedServicesServiceIdRoute
  UnprotectedStudentsStudentIdRoute: typeof UnprotectedStudentsStudentIdRoute
  UnprotectedServicesIndexRoute: typeof UnprotectedServicesIndexRoute
  UnprotectedStudentsIndexRoute: typeof UnprotectedStudentsIndexRoute
}

const UnprotectedRouteRouteChildren: UnprotectedRouteRouteChildren = {
  UnprotectedSigninRoute: UnprotectedSigninRoute,
  UnprotectedSignupRoute: UnprotectedSignupRoute,
  UnprotectedIndexRoute: UnprotectedIndexRoute,
  UnprotectedServicesServiceIdRoute: UnprotectedServicesServiceIdRoute,
  UnprotectedStudentsStudentIdRoute: UnprotectedStudentsStudentIdRoute,
  UnprotectedServicesIndexRoute: UnprotectedServicesIndexRoute,
  UnprotectedStudentsIndexRoute: UnprotectedStudentsIndexRoute,
}

const UnprotectedRouteRouteWithChildren =
  UnprotectedRouteRoute._addFileChildren(UnprotectedRouteRouteChildren)

interface ProtectedDashboardRouteRouteChildren {
  ProtectedDashboardProfileRoute: typeof ProtectedDashboardProfileRoute
  ProtectedDashboardIndexRoute: typeof ProtectedDashboardIndexRoute
  ProtectedDashboardServicesServiceIdRoute: typeof ProtectedDashboardServicesServiceIdRoute
  ProtectedDashboardServicesIndexRoute: typeof ProtectedDashboardServicesIndexRoute
}

const ProtectedDashboardRouteRouteChildren: ProtectedDashboardRouteRouteChildren =
  {
    ProtectedDashboardProfileRoute: ProtectedDashboardProfileRoute,
    ProtectedDashboardIndexRoute: ProtectedDashboardIndexRoute,
    ProtectedDashboardServicesServiceIdRoute:
      ProtectedDashboardServicesServiceIdRoute,
    ProtectedDashboardServicesIndexRoute: ProtectedDashboardServicesIndexRoute,
  }

const ProtectedDashboardRouteRouteWithChildren =
  ProtectedDashboardRouteRoute._addFileChildren(
    ProtectedDashboardRouteRouteChildren,
  )

export interface FileRoutesByFullPath {
  '': typeof UnprotectedRouteRouteWithChildren
  '/dashboard': typeof ProtectedDashboardRouteRouteWithChildren
  '/signin': typeof UnprotectedSigninRoute
  '/signup': typeof UnprotectedSignupRoute
  '/': typeof UnprotectedIndexRoute
  '/dashboard/profile': typeof ProtectedDashboardProfileRoute
  '/services/$serviceId': typeof UnprotectedServicesServiceIdRoute
  '/students/$studentId': typeof UnprotectedStudentsStudentIdRoute
  '/dashboard/': typeof ProtectedDashboardIndexRoute
  '/services': typeof UnprotectedServicesIndexRoute
  '/students': typeof UnprotectedStudentsIndexRoute
  '/dashboard/services/$serviceId': typeof ProtectedDashboardServicesServiceIdRoute
  '/dashboard/services': typeof ProtectedDashboardServicesIndexRoute
}

export interface FileRoutesByTo {
  '/signin': typeof UnprotectedSigninRoute
  '/signup': typeof UnprotectedSignupRoute
  '/': typeof UnprotectedIndexRoute
  '/dashboard/profile': typeof ProtectedDashboardProfileRoute
  '/services/$serviceId': typeof UnprotectedServicesServiceIdRoute
  '/students/$studentId': typeof UnprotectedStudentsStudentIdRoute
  '/dashboard': typeof ProtectedDashboardIndexRoute
  '/services': typeof UnprotectedServicesIndexRoute
  '/students': typeof UnprotectedStudentsIndexRoute
  '/dashboard/services/$serviceId': typeof ProtectedDashboardServicesServiceIdRoute
  '/dashboard/services': typeof ProtectedDashboardServicesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_unprotected': typeof UnprotectedRouteRouteWithChildren
  '/_protected/dashboard': typeof ProtectedDashboardRouteRouteWithChildren
  '/_unprotected/signin': typeof UnprotectedSigninRoute
  '/_unprotected/signup': typeof UnprotectedSignupRoute
  '/_unprotected/': typeof UnprotectedIndexRoute
  '/_protected/dashboard/profile': typeof ProtectedDashboardProfileRoute
  '/_unprotected/services/$serviceId': typeof UnprotectedServicesServiceIdRoute
  '/_unprotected/students/$studentId': typeof UnprotectedStudentsStudentIdRoute
  '/_protected/dashboard/': typeof ProtectedDashboardIndexRoute
  '/_unprotected/services/': typeof UnprotectedServicesIndexRoute
  '/_unprotected/students/': typeof UnprotectedStudentsIndexRoute
  '/_protected/dashboard/services/$serviceId': typeof ProtectedDashboardServicesServiceIdRoute
  '/_protected/dashboard/services/': typeof ProtectedDashboardServicesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/dashboard'
    | '/signin'
    | '/signup'
    | '/'
    | '/dashboard/profile'
    | '/services/$serviceId'
    | '/students/$studentId'
    | '/dashboard/'
    | '/services'
    | '/students'
    | '/dashboard/services/$serviceId'
    | '/dashboard/services'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/signin'
    | '/signup'
    | '/'
    | '/dashboard/profile'
    | '/services/$serviceId'
    | '/students/$studentId'
    | '/dashboard'
    | '/services'
    | '/students'
    | '/dashboard/services/$serviceId'
    | '/dashboard/services'
  id:
    | '__root__'
    | '/_unprotected'
    | '/_protected/dashboard'
    | '/_unprotected/signin'
    | '/_unprotected/signup'
    | '/_unprotected/'
    | '/_protected/dashboard/profile'
    | '/_unprotected/services/$serviceId'
    | '/_unprotected/students/$studentId'
    | '/_protected/dashboard/'
    | '/_unprotected/services/'
    | '/_unprotected/students/'
    | '/_protected/dashboard/services/$serviceId'
    | '/_protected/dashboard/services/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  UnprotectedRouteRoute: typeof UnprotectedRouteRouteWithChildren
  ProtectedDashboardRouteRoute: typeof ProtectedDashboardRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  UnprotectedRouteRoute: UnprotectedRouteRouteWithChildren,
  ProtectedDashboardRouteRoute: ProtectedDashboardRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_unprotected",
        "/_protected/dashboard"
      ]
    },
    "/_unprotected": {
      "filePath": "_unprotected/route.tsx",
      "children": [
        "/_unprotected/signin",
        "/_unprotected/signup",
        "/_unprotected/",
        "/_unprotected/services/$serviceId",
        "/_unprotected/students/$studentId",
        "/_unprotected/services/",
        "/_unprotected/students/"
      ]
    },
    "/_protected/dashboard": {
      "filePath": "_protected/dashboard/route.tsx",
      "children": [
        "/_protected/dashboard/profile",
        "/_protected/dashboard/",
        "/_protected/dashboard/services/$serviceId",
        "/_protected/dashboard/services/"
      ]
    },
    "/_unprotected/signin": {
      "filePath": "_unprotected/signin.tsx",
      "parent": "/_unprotected"
    },
    "/_unprotected/signup": {
      "filePath": "_unprotected/signup.tsx",
      "parent": "/_unprotected"
    },
    "/_unprotected/": {
      "filePath": "_unprotected/index.tsx",
      "parent": "/_unprotected"
    },
    "/_protected/dashboard/profile": {
      "filePath": "_protected/dashboard/profile.tsx",
      "parent": "/_protected/dashboard"
    },
    "/_unprotected/services/$serviceId": {
      "filePath": "_unprotected/services/$serviceId.tsx",
      "parent": "/_unprotected"
    },
    "/_unprotected/students/$studentId": {
      "filePath": "_unprotected/students/$studentId.tsx",
      "parent": "/_unprotected"
    },
    "/_protected/dashboard/": {
      "filePath": "_protected/dashboard/index.tsx",
      "parent": "/_protected/dashboard"
    },
    "/_unprotected/services/": {
      "filePath": "_unprotected/services/index.tsx",
      "parent": "/_unprotected"
    },
    "/_unprotected/students/": {
      "filePath": "_unprotected/students/index.tsx",
      "parent": "/_unprotected"
    },
    "/_protected/dashboard/services/$serviceId": {
      "filePath": "_protected/dashboard/services/$serviceId.tsx",
      "parent": "/_protected/dashboard"
    },
    "/_protected/dashboard/services/": {
      "filePath": "_protected/dashboard/services/index.tsx",
      "parent": "/_protected/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
